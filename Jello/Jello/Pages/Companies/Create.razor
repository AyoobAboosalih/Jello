@page "/companies/create"
@inject NavigationManager Navigator;
@inject ProjectModel projectModel
@inject CompanyModel companyModel
@inject MudBlazor.ISnackbar snackBar


<h3>Create a new Company</h3>

<EditForm Model="company" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <MudCard>
        <MudCardContent>
            <MudTextField Label="Name" HelperText="Max. 8 characters"
                          @bind-Value="company.Name" For="@(() => company.Name)" />

            <MudList Clickable="true" @bind-SelectedItem="selectedProjectItem" @bind-SelectedValue="selectedProjectValue">
                @foreach (var project in projects)
                {
                    <MudListItem Text=@project.Name Value=@project />
                }
            </MudList>
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="@AddProject">Add Project</MudButton>
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Create</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>


@code {

    private Company company = new Company();
    MudListItem selectedProjectItem;
    private Project selectedProjectValue;
    private List<Project> projects;

    protected override async Task OnInitializedAsync()
    {
        projects = await Task.Run(() => projectModel.GetProjects());
    }


    protected async void HandleValidSubmit()
    {
        await companyModel.SaveCompany(company);
        snackBar.Add("Company Saved.", Severity.Success);
        Navigator.NavigateTo("/companies");
    }

    void AddProject()
    {
        company.AssignedProjects.Add(selectedProjectValue);
    }



}
